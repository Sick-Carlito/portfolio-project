{"version":3,"sources":["components/Timeline/Timeline.js","assets/images/profileImage.jpeg","utils/resumeData.js","components/Button/Button.js","components/Profile/Profile.js","components/Header/Header.js","components/Footer/Footer.js","components/ImageGallery/ImageGallery.js","pages/Portfolio/Portfolio.js","pages/Resume/Resume.js","App.js","reportWebVitals.js","index.js"],"names":["CustomTimelineSeparator","TimelineSeparator","className","TimelineDot","variant","TimelineConnector","CustomTimeline","title","icon","children","Timeline","TimelineItem","TimelineContent","Typography","name","birthday","email","github","twitter","linkedin","phone","about","experiences","role","date","description","educations","socials","Twitter","link","text","LinkedIn","Github","services","AssignmentOutlined","skills","projects","tag","images","caption","links","YouTube","CustomButton","endIcon","CustomTimelineItem","href","target","Profile","resumeData","src","profileImage","alt","Object","keys","map","key","withRouter","props","pathName","location","pathname","Navbar","expand","sticky","Nav","Link","as","NavLink","to","Brand","HomeRounded","Toggle","Collapse","Telegram","Footer","ImageGallery","imageList","image","original","thumbnail","items","showBullets","showThumbnails","Portfolio","useState","tabValue","setTabValue","projectDialog","setProjectDialog","Grid","container","spacing","item","xs","Tabs","value","indicatorColor","onChange","Event","newValue","Tab","label","Set","project","sm","md","Grow","in","timeout","Card","onClick","CardActionArea","CardMedia","CardContent","Dialog","maxWidth","open","onClose","DialogTitle","DialogContent","style","height","DialogActions","Resume","experience","education","justify","service","Icon","skill","Paper","elevetion","varient","element","lg","TextField","fullWidth","multiline","rows","App","Container","backgroundColor","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72dbc3d4.chunk.js","sourcesContent":["import React from \"react\";\n\nimport Timeline from \"@material-ui/lab/Timeline\";\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector\";\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\nimport { Typography } from \"@material-ui/core\";\nimport WorkIcon from \"@material-ui/icons/Work\";\nimport \"./Timeline.css\";\n\nconst CustomTimeline = ({ title, icon, children }) => {\n  return (\n    <Timeline className={\"timeline\"}>\n      {/* Item Header */}\n      <TimelineItem className={\"timeline_firstItem\"}>\n        <TimelineSeparator>\n          <TimelineDot className={\"timeline_dot_header\"}>{icon}</TimelineDot>\n          <TimelineConnector />\n        </TimelineSeparator>\n        <TimelineContent>\n          <Typography variant=\"h6\" className={\"timeline_header\"}>\n            {title}\n          </Typography>\n        </TimelineContent>\n      </TimelineItem>\n\n      {children}\n    </Timeline>\n  );\n};\n\nexport const CustomTimelineSeparator = () => (\n  <TimelineSeparator className={\"separator_padding\"}>\n    <TimelineDot variant={\"outlined\"} className={\"timeline_dot\"} />\n    <TimelineConnector />\n  </TimelineSeparator>\n);\n\nexport default CustomTimeline;\n","export default __webpack_public_path__ + \"static/media/profileImage.db024c3d.jpeg\";","import React from \"react\";\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\nimport WebOutlined from \"@material-ui/icons/WebOutlined\";\nimport { AssignmentOutlined, YouTube } from \"@material-ui/icons\";\nimport GitHub from \"@material-ui/icons/GitHub\";\nimport LinkedIn from \"@material-ui/icons/LinkedIn\";\nimport LanguageOutlinedIcon from '@material-ui/icons/LanguageOutlined';\n\n\n\n\nexport default {\n  name: \"Carl Bond\",\n  title: \"Front-end developer\",\n\n  birthday: \"20th April 1994\",\n  email: \"carlb1319@gmail.com\",\n\n  github: 'https://github.com/Sick-Carlito',\n  twitter: 'https://twitter.com/cbond_420',\n  linkedin: 'https://www.linkedin.com/in/carlb420/',\n  \n  phone: \"+254 704 965 601\",\n\n  about: \" Experienced writer and content creator with 5+ years of experience writing and creating great quality content for several clients in different industries in the USA and Europe. \\n\\n Also, I love taking new challenges. Currently, I'm exploring new opportunities in the Tech field with a few projects under my belt already. I have skills as a full stack developer using various technologies including; Ruby on Rails, Ruby, HTML5, CSS, Python, Flask, Javascript, and React.js. I'm also good at problem-solving, innovation, and teamwork skills. I'm currently looking for an opportunity. Feel free to contact me at carlb1319@gmail.com. Thank you.\",\n  experiences: [\n    \n    {\n      title: 'CODECADEMY (Remote)',\n      role: 'Leaner',\n      date: '2019 - present',\n      description: <ul>\n                      <li>Learned fundamentals of web development using Ruby.</li>\n                      <li>Spent more than 100+ hours solving technical challenges and completing various assignments.</li>\n                  </ul>\n    },\n    {\n      title: 'MICROVERSE (Remote)',\n      role: 'Mentor (Volunteer)',\n      date: '2019 - 2020',\n      description: <ul>\n                      <li>Mentored junior web developers, providing technical support through code reviews.</li>\n                      <li>Provided general guidance and help to other students.</li>\n                      <li>Provided advice and tips on how to maintain motivation to maintain longevity in the program.</li>\n                  </ul>\n    },\n    {\n      title: 'Upwork (Remote)',\n      role: 'Freelance Writer/Web Developer',\n      date: 'Aug 2015 - present',\n      description: <ul>\n                      <li>Mastered the art of working with others towards achieving the same goal.</li>\n                      <li>Follow instructions as given and complete jobs as requested by clients.</li>\n                      <li>Complete jobs on time to beat deadlines</li>\n                  </ul>\n    },\n    {\n      title: 'Ngamia Haulers',\n      role: 'Front-end Web Developer (Internship)',\n      date: 'Sep 2020 - Feb 2021',\n      description: <ul>\n                      <li>Collaborated with other developers to come up with better designs.</li>\n                      <li>Responsible for building the front end of user and admin portals.</li>\n                      <li>Conducted and facilitated meetings when required.</li>\n                      <li>Tsested and give report about products built by the team.</li>\n                  </ul>\n    }\n  ],\n\n  educations: [\n    {\n      title: 'MASENO UNIVERSITY1 (Computer Science, BSc)',\n      date: '2012 - 2017',\n      description: <ul>\n                      <li>I have gained great collaborative skills working with other student.</li>\n                      <li>Mastered good communication skills and learning to interact with people of different backgrounds</li>\n                      <li>Acquired the skill of proper time management as I always strive to complete any given tasks on time.</li>\n                      <li>Learned fundamentals of web development: HTML, CSS, Bootstrap, JavaScript.</li>\n                      <li>Learned different software development methodologies: Waterfall, Agile.</li>\n                  </ul>\n    },\n    {\n      title: 'MICROVERSE (Remote Full Stack Web Development Program, Full Time) ',\n      date: '2019 - present',\n      description: <ul>\n                      <li>Spent 1300+ hours mastering algorithms, data structures, and full-stack development while simultaneously\n                          developing projects with Ruby, Rails, JavaScript, React, and Redux.</li>\n                      <li>Developed skills in remote pair-programming using GitHub, industry-standard gitflow, and daily standups to\n                          communicate and collaborate with international remote developers.</li>\n                      <li>Learned fundamentals of full-stack web development: git, HTML/CSS, Ruby, Rails, JavaScript, React.</li>\n                      <li>Proposed improvements to code organization to improve code quality and overall performance.</li>\n                      <li>Spent over 80 hours learning and using algorithms and data structures.</li>\n                      <li>Worked via remote pair programming 40 hours/week.</li>\n                  </ul>\n       \n    },\n  ],\n\n  socials: {\n    \n    Twitter: {\n      link: \"https://twitter.com/cbond_420\",\n      text: \"My twitter\",\n      icon: <TwitterIcon />,\n    },\n    LinkedIn: {\n      link: \"https://www.linkedin.com/in/carlb420/\",\n      text: \"My LinkedIn\",\n      icon: <LinkedInIcon />,\n    },\n    Github: {\n      link: \"https://github.com/Sick-Carlito\",\n      text: \"My Github\",\n      icon: <GitHubIcon />,\n    },\n  },\n\n  services: [{\n    title: 'Web Development',\n    description: 'Build responsive and nice looking websites. ',\n    icon: <WebOutlined/>,\n  },\n  {\n    title: 'Product Reviews',\n    description: 'Get the most reliable information about a product',\n    icon: <AssignmentOutlined/>,\n  },\n  {\n      title: 'Article Writing',\n      description: 'Get articles that are full of facts and are data-driven.',\n      icon: <WebOutlined/>,\n    }],\n\n  skills: [{\n    title: 'FRONT-END',\n    description: [\n      'HTML/CSS',\n      'ReactJS',\n      'Redux',\n      'JavaScript',\n      'Bootstrap',\n      'Material UI',\n    ],\n  },\n  {\n    title: 'BACK-END',\n    description: [ 'Python', 'Ruby', 'Rails', 'MySQL', 'Capybara'],\n    \n  },\n    {\n      title: 'DATABASES',\n      description: [ 'MySQL', 'Firebase', 'Ms SQL Server', 'Postgresql'],\n      \n    },\n     {\n      title: 'SOURCE CONTROL',\n      description: ['Git', 'GitHub ', 'SCRUM/Agile', 'Heroku', 'RSpec', 'TDD', 'Chrome Dev Tools'],\n      \n    },\n],\n\n  projects: [{\n    tag: 'React',\n    images: ['https://miro.medium.com/max/1400/1*YePVzjkjsadOqzQ03wl5kA.png',\n            ],\n    title: 'First Portfolio Project ',\n    caption: 'This was my first ever project in ReactJS',\n    description: 'A simple React based personal portfolio app using create-react-app and React Router v4.',\n    links: [{\n      link: 'https://morning-inlet-14998.herokuapp.com/', icon: <LanguageOutlinedIcon />\n    },\n    {\n      link: 'https://github.com/Sick-Carlito/Portfolio', icon: <GitHub />\n    },\n    {\n      link: 'https://www.linkedin.com/in/carlb420/', icon: <LinkedIn />\n    },\n  ],\n  },\n  {\n    tag: 'Ruby on rails',\n   images: ['https://img-cdn.tnwcdn.com/image?fit=1280%2C720&url=https%3A%2F%2Fcdn0.tnwcdn.com%2Fwp-content%2Fblogs.dir%2F1%2Ffiles%2F2016%2F02%2Frubyonraills.jpg&signature=8a5b3c6294a08dac9e7e44a1c8338f59'\n            ],\n    title: 'Twitter-Redesign',\n    caption: 'A simple web application with twitter-like functionalities',\n    description: 'This is a simple rails application that implements the use of active records, associations and the CRUD functionalities of rails. The app allows users to Register/Sign-up and post opinions on various topics. Users can also follow one another, edit and delete their posts.',\n    links: [{\n      link: 'https://young-fortress-46435.herokuapp.com/users/sign_in', icon: <LanguageOutlinedIcon />\n    },\n    {\n      link: 'https://github.com/Sick-Carlito/Twitter-Redesign', icon: <GitHub />\n    },\n    {\n      link: 'https://www.linkedin.com/in/carlb420/', icon: <LinkedIn />\n    },\n  ],\n  },\n  {\n    tag: 'Ruby on rails',\n   images: ['https://img-cdn.tnwcdn.com/image?fit=1280%2C720&url=https%3A%2F%2Fcdn0.tnwcdn.com%2Fwp-content%2Fblogs.dir%2F1%2Ffiles%2F2016%2F02%2Frubyonraills.jpg&signature=8a5b3c6294a08dac9e7e44a1c8338f59'\n            ],\n    title: 'ror-social-scaffold',\n    caption: 'This is a simple web app that has basic faebook-like functions.',\n    description: 'The app allows users to register new acounts and create posts. They can also comment on the posts and like or dislike them as well. Users can also add other users as friends by sending them a friend request. Which can either be rejected or accepted by the other user.',\n    links: [{\n      link: 'https://boiling-plateau-13640.herokuapp.com/users/sign_in', icon: <LanguageOutlinedIcon />\n    },\n    {\n      link: 'https://github.com/Sick-Carlito/ror-social-scaffold', icon: <GitHub />\n    },\n    {\n      link: 'https://www.linkedin.com/in/carlb420/', icon: <LinkedIn />\n    },\n  ],\n  },\n  {\n    tag: 'HTML/CSS & Bootstrap',\n    images: ['https://www.filepicker.io/api/file/INZsH6XtRIqQqxvYGP6Q'\n            ],\n    title: 'The Odin Bootsrap-project',\n    caption: 'A simple project working with Bootstrap 4, HTML and CSS',\n    description: 'This is my personal project to show how you can combine HTML?CSS & Bootstrap to come up with a nice looking responsive website',\n    links: [{\n      link: 'https://rawcdn.githack.com/Sick-Carlito/Bootstrap-project/22b07603ea94fd1055448d6f818e766313ee1a23/index.html', icon: <LanguageOutlinedIcon />\n    },\n    {\n      link: 'https://github.com/Sick-Carlito/Bootstrap-project', icon: <GitHub />\n    },\n    {\n      link: 'https://www.linkedin.com/in/carlb420/', icon: <LinkedIn />\n    },\n  ],\n  },\n  {\n    tag: 'React',\n    images: [ 'https://miro.medium.com/max/1400/1*YePVzjkjsadOqzQ03wl5kA.png' ],\n    title: 'Second Portfolio Project',\n    caption: 'Second portfolio project built using ReactJS ',\n    description: 'This project was bootstrapped with Create React App.It is a portfolio project that shows different aspects of coding with ReactJS including working with Grids and building resusable react components',\n    links: [{\n      link: 'https//www.google.com', icon: <YouTube />\n    },\n    {\n      link: 'https://github.com/Sick-Carlito/portfolio-project', icon: <GitHub />\n    },\n    {\n      link: 'https://www.linkedin.com/in/carlb420/', icon: <LinkedIn />\n    },\n  ],\n  },\n  {\n    tag: 'React',\n    images: [ 'https://miro.medium.com/max/1400/1*YePVzjkjsadOqzQ03wl5kA.png' ],\n    title: 'JavaScript Restaurant Page Project',\n    caption: 'A simple web app to dislay a resturant page using HTML, JavaScript and Webpack. ',\n    description: 'A simple web app to dislay a resturant page using HTML, JavaScript and Webpack. Things covered in this project also include; Factory Functions, Module Pattern, Webpack',\n    links: [{\n      link: 'https://raw.githack.com/Sick-Carlito/Resturant-Page/feature-1/dist/index.htmlhttps//www.google.com', icon: <LanguageOutlinedIcon />\n    },\n    {\n      link: 'https://github.com/Sick-Carlito/Resturant-Page', icon: <GitHub />\n    },\n    {\n      link: 'https://www.linkedin.com/in/carlb420/', icon: <LinkedIn />\n    },\n  ],\n  }\n],\n  \n\n};\n","import React from 'react';\nimport './Button.css'\nimport { Button } from \"@material-ui/core\";\n\nconst CustomButton = ({text, icon}) => {\n    return (\n        <Button className='custom_btn' endIcon={icon ? \n        (<div className='btn_icon_container'>{icon}</div>) : null} >\n            <span className='btn_text'>{text}</span>\n        </Button>\n    )\n}\n\nexport default CustomButton","import { Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport \"./Profile.css\";\nimport CustomTimeline, {\n  CustomTimelineSeparator,\n} from \"../Timeline/Timeline.js\";\nimport profileImage from \"../../assets/images/profileImage.jpeg\";\nimport resumeData from \"../../utils/resumeData\";\nimport PersonOutlineOutlinedIcon from \"@material-ui/icons/PersonOutlineOutlined\";\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\nimport CustomButton from \"../Button/Button\";\nimport GetAppIcon from '@material-ui/icons/GetApp';\n\n\n\n\nconst CustomTimelineItem = ({ title, text, link }) => (\n  <TimelineItem>\n    <CustomTimelineSeparator />\n    <TimelineContent>\n      {link ? (\n        <Typography className=\"timelineItem_text\">\n          <span>{title}:</span>\n          {\"\"}\n          <a href={link} target=\"_blank\">\n            {text}\n          </a>\n        </Typography>\n      ) : (\n        <Typography className=\"timelineItem_text\">\n          <span>{title}:</span>\n          {text}\n        </Typography>\n      )}\n    </TimelineContent>\n  </TimelineItem>\n);\n\nconst Profile = () => {\n  return (\n    <div className=\"profile container_shadow\">\n      <div className=\"profile_name\">\n        <Typography className=\"name\">{resumeData.name}</Typography>\n        <Typography className=\"title\">{resumeData.title}</Typography>\n      </div>\n\n      <figure className=\"profile_image\">\n        <img src={profileImage} alt=\"carl\" />\n      </figure>\n\n      <div className=\"profile_information\">\n        <CustomTimeline icon={<PersonOutlineOutlinedIcon />}>\n          <CustomTimelineItem title=\"Name\" text={resumeData.name} />\n          <CustomTimelineItem title=\"Title\" text={resumeData.title} />\n          <CustomTimelineItem title=\"Email\" text={resumeData.email} />\n\n          {Object.keys(resumeData.socials).map((key) => (\n            <CustomTimelineItem\n              title={key}\n              text={resumeData.socials[key].text}\n              link={resumeData.socials[key].link}\n            />\n          ))}\n        </CustomTimeline>\n        <div className='button_containe'>\n          <CustomButton text={'Download Cv'} icon={ <GetAppIcon />} />\n        </div>\n        \n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport{ \n    Button,\n    Form,\n    FormControl,\n    Nav,\n    Navbar,\n    NavbarBrand,\n    NavDropdown,\n} from 'react-bootstrap';\nimport { Link, NavLink, withRouter } from 'react-router-dom';\nimport { \n    HomeRounded,\n    SchoolRounded,\n    WorkRounded,\n    Facebook,\n    Twitter,\n    LinkedIn,\n    GitHub,\n    Telegram,\n} from '@material-ui/icons';\nimport resumeData from '../../utils/resumeData';\nimport CustomButton from '../Button/Button';\nimport './Header.css';\n\n\nconst Header = (props) => {\n\n    const pathName = props?.location?.pathname\n\n    return (\n        <Navbar expand='lg' sticky='top' className='header'>\n            <Nav.Link as={NavLink} to='/' className='header_navlink'>\n                <Navbar.Brand className='header_home'>\n                    <HomeRounded/>\n                </Navbar.Brand>\n            </Nav.Link>\n\n            <Navbar.Toggle/>\n\n            <Navbar.Collapse>\n                <Nav className='header_left'>\n                    {/* Resume link */}\n                    <Nav.Link as={NavLink} to='/' className={pathName == '/' ? 'header_link_active' : 'header_link'}>Resume</Nav.Link>\n\n                    {/* Portfolio Link  */}\n                    <Nav.Link as={NavLink} to='/portfolio' className={pathName == '/portfolio' ? 'header_link_active' : 'header_link'}>Portfolio</Nav.Link>\n                </Nav>\n\n                <div className='header_right'>\n                    {Object.keys(resumeData.socials).map(key => ( \n                        <a href={resumeData.socials[key].link} target='_blank'>{resumeData.socials[key].icon}</a>\n                    ))}\n                    <CustomButton text={'Hire Me'} icon={<Telegram/>} />\n                </div>\n            </Navbar.Collapse>\n\n        </Navbar>\n    )\n}\n\nexport default withRouter(Header);\n","import { Typography } from '@material-ui/core'\nimport React from 'react'\nimport './Footer.css'\nimport resumeData from '../../utils/resumeData'\n\nconst Footer = () => {\n    return (\n        <div className='footer'>\n            <div className='footer_left'>\n                <Typography className='footer_name'>\n                    {resumeData.name}\n                </Typography>\n            </div>\n            <div className='footer_right'>\n              <Typography className='footer_copyright'>\n                  Designed and Developed by <a href='/' target='_blank'>Sick Carlito</a>\n                  <br/>\n                  Clone idea from <a href='https://themeforest.net/user/tavonline' target='_blank'>Tavonline</a>.\n              </Typography>\n            </div>\n        </div>\n    )\n}\n\nexport default Footer\n","import React from \"react\";\nimport Gallery from \"react-image-gallery\";\nimport 'react-image-gallery/styles/css/image-gallery.css';\nimport './ImageGallery.css'\n\n\nconst ImageGallery = (props) => {\n    const imageList = props?.images?.map((image) => {\n        return {\n            original: image,\n            thumbnail: image,\n        };\n    });\n\n    return (\n        <div>\n            <Gallery items={imageList} showBullets showThumbnails={false} />\n        </div>\n    );\n};\n\nexport default ImageGallery;","import React, { useState } from \"react\";\nimport \"./Portfolio.css\";\nimport {\n  Tabs,\n  Tab,\n  Grow,\n  Grid,\n  Card,\n  CardActionArea,\n  CardMedia,\n  CardContent,\n  Typography,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@material-ui/core\";\nimport resumeData from \"../../utils/resumeData\";\nimport ImageGallery from \"../../components/ImageGallery/ImageGallery\";\n\n\nconst Portfolio = () => {\n  const [tabValue, setTabValue] = useState(\"All\");\n\n  const [projectDialog, setProjectDialog] = useState(false);\n\n \n\n  return (\n    <Grid container spacing={1} className=\"section pb_45 pt_45\">\n      <Grid item className=\"section_title mb_20\">\n        <span></span>\n        <h6 className=\"section_title_text\"> Portfolio</h6>\n      </Grid>\n\n      <Grid item xs={12}>\n        <Tabs\n          value={tabValue}\n          indicatorColor=\"white\"\n          className=\"customTabs\"\n          onChange={(Event, newValue) => setTabValue(newValue)}\n        >\n          <Tab\n            label=\"All\"\n            value=\"All\"\n            className={\n              tabValue == \"All\" ? \"customTabs_item active\" : \"customTabs_item\"\n            }\n          />\n\n          {[...new Set(resumeData.projects.map((item) => item.tag))].map(\n            (tag) => (\n              <Tab\n                label={tag}\n                value={tag}\n                className={\n                  tabValue == tag\n                    ? \"customTabs_item active\"\n                    : \"customTabs_item\"\n                }\n              />\n            )\n          )}\n        </Tabs>\n      </Grid>\n\n      <Grid item xs={12}>\n        <Grid container spacing={3}>\n          {resumeData.projects.map((project) => (\n            <>\n            { tabValue == project.tag || tabValue == 'All'? (\n                <Grid item xs={12} sm={6} md={4}>\n                <Grow in timeout={1000}>\n                  <Card className='customCard' onClick={()=> setProjectDialog(project)} >\n                    <CardActionArea>\n                      <CardMedia className='customCard_image' image={project.images[0]} title={project.title} />\n                      <CardContent>\n                        <Typography variant={'body2'} className='customCard_title' >{project.title}</Typography>\n                        <Typography variant='caption' className='customCard_caption'>{project.caption}</Typography>\n                      </CardContent>\n                    </CardActionArea>\n                  </Card>\n                </Grow>\n              </Grid>\n            ) : null}\n              \n            </>\n          ))}\n        </Grid>\n      </Grid>\n\n      <Dialog maxWidth={'lg'} className='projectDialog' open={projectDialog} onClose={()=> setProjectDialog(false)}>\n          <DialogTitle onClose={()=> setProjectDialog(false)}>{projectDialog.title}</DialogTitle>\n          \n          <DialogContent style={{height: '80vh'}} >\n            {projectDialog.images && (\n              <ImageGallery images={projectDialog.images} />\n            )}\n            <Typography className='projectDialog_description'>{projectDialog.description}</Typography>\n          </DialogContent >\n          <DialogActions className='projectDialog_actions'>\n            {projectDialog?.links?.map(link => (\n              <a href={link.link} target='_blank' className='projectDialog_icon'>{link.icon}</a>\n            ))}\n          </DialogActions>\n      </Dialog>\n    </Grid>\n  );\n};\n\nexport default Portfolio;\n","import React from \"react\";\nimport \"./Resume.css\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Icon, Paper, TextField, Typography } from \"@material-ui/core\";\nimport resumeData from \"../../utils/resumeData\";\nimport CustomTimeline from \"../../components/Timeline/Timeline\";\nimport { CustomTimelineSeparator } from \"../../components/Timeline/Timeline\";\nimport WorkIcon from \"@material-ui/icons/Work\";\nimport SchoolIcon from \"@material-ui/icons/School\";\nimport {\n  TimelineContent,\n  TimelineDot,\n  TimelineSeparator,\n  TimelineItem,\n  TimelineConnector,\n} from \"@material-ui/lab\";\nimport CustomButton from \"../../components/Button/Button\";\n\nconst Resume = () => {\n  return (\n    <>\n      {/* About me */}\n      <Grid container className=\"section pb_45 pt_45\">\n        <Grid item className=\"section_title mb_30\">\n          <span></span>\n          <h6 className=\"section_title_text\">About Me</h6>\n        </Grid>\n        <Grid item xs={12}>\n          <Typography variant=\"body2\" className=\"aboutme_text\">\n            {resumeData.about}\n          </Typography>\n        </Grid>\n      </Grid>\n\n      {/* Education and Experience */}\n      <Grid container className=\"section pb_45\">\n        <Grid item className=\"section_title mb_30\">\n          <span></span>\n          <h6 className=\"section_title_text\">Resume</h6>\n        </Grid>\n        <Grid container className=\"resume_timeline\">\n          {/* Experiences or Working history */}\n          <Grid item sm={12} md={6}>\n            <CustomTimeline title=\"Work Experience\" icon={<WorkIcon />}>\n              {resumeData.experiences.map((experience) => (\n                <TimelineItem>\n                  <CustomTimelineSeparator />\n                  <TimelineContent className=\"timeline_content\">\n                    <Typography className=\"timeline_title\">\n                      {experience.title}\n                    </Typography>\n                    <Typography variant=\"caption\" className=\"timeline_date\">\n                      {experience.date}\n                    </Typography>\n                    <Typography\n                      variant=\"body2\"\n                      className=\"timeline_description\"\n                    >\n                      {experience.description}\n                    </Typography>\n                  </TimelineContent>\n                </TimelineItem>\n              ))}\n            </CustomTimeline>\n          </Grid>\n\n          {/* Education */}\n          <Grid item sm={12} md={6}>\n            <CustomTimeline title=\"Education History\" icon={<SchoolIcon />}>\n              {resumeData.educations.map((education) => (\n                <TimelineItem>\n                  <CustomTimelineSeparator />\n                  <TimelineContent className=\"timeline_content\">\n                    <Typography className=\"timeline_title\">\n                      {education.title}\n                    </Typography>\n                    <Typography variant=\"caption\" className=\"timeline_date\">\n                      {education.date}\n                    </Typography>\n                    <Typography\n                      variant=\"body2\"\n                      className=\"timeline_description\"\n                    >\n                      {education.description}\n                    </Typography>\n                  </TimelineContent>\n                </TimelineItem>\n              ))}\n            </CustomTimeline>\n          </Grid>\n        </Grid>\n      </Grid>\n\n      {/* Services */}\n      <Grid container className=\"section pb_45 \">\n        <Grid item className=\"section_title mb_30\">\n          <span></span>\n          <h6 className=\"section_title_text\">My Services</h6>\n        </Grid>\n        <Grid xs={12}>\n          <Grid container spacing={3} justify=\"space-around\">\n            {resumeData.services.map((service) => (\n              <Grid item xs={12} sm={6} md={3}>\n                <div className=\"service\">\n                  <Icon className=\"service-icon\">{service.icon}</Icon>\n                  <Typography className=\"service_title\" variant=\"h6\">\n                    {service.title}\n                  </Typography>\n                  <Typography className=\"service_description\" variant=\"body2\">\n                    {service.description}\n                  </Typography>\n                </div>\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n      </Grid>\n\n      {/* Skills */}\n      <Grid container className=\"section graybg pb_45 p_50\">\n        <Grid item xs={12}>\n          <Grid container justify=\"space-between\" spacing={3}>\n            {resumeData.skills.map((skill) => (\n              <Grid item xs={12} sm={6} md={3}>\n                <Paper elevetion={0} className=\"skill\">\n                  <Typography varient=\"h6\" className=\"skill_title\">\n                    {skill.title}\n                  </Typography>\n                  {skill.description.map((element) => (\n                    <Typography variant=\"body2\" className=\"skill_description\">\n                      <TimelineDot\n                        variant={\"outlined\"}\n                        className=\"timeline_dot\"\n                      />\n                      {element}\n                    </Typography>\n                  ))}\n                </Paper>\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n      </Grid>\n\n      {/* Contact */}\n      <Grid container className=\"section pt_45 pb_45\" spacing={5} >\n        {/* Contact form */}\n        <Grid item xs={12} lg={7}>\n          <Grid container>\n            <Grid item className='section_title mb_30'>\n              <span></span>\n              <h6 className='section_title_text'> Contact Form</h6>\n            </Grid>\n\n            <Grid item xs={12}>\n              <Grid container spacing={3}>\n                <Grid item xs={12} sm={6}>\n                  <TextField fullWidth name='name' label='Name'/>\n                </Grid>\n                 <Grid item xs={12} sm={6}>\n                  <TextField fullWidth name='email' label='Email'/>\n                </Grid>\n                 <Grid item xs={12} sm={6}>\n                  <TextField fullWidth name='message' label='Message' multiline rows={4}/>\n                </Grid>\n                <Grid item xs={12}>\n                  <CustomButton text='Submit'/>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n\n        {/* Contact information */}\n        <Grid item xs={12} lg={5}>\n          <Grid container>\n            <Grid item className='section_title mb_30'>\n              <span></span>\n              <h6 className='section_title'>Contact informationc</h6>\n            </Grid>\n            <Grid item xs={12}>\n              <Grid container>\n          \n                <Grid item xs={12}>\n                  <Typography className='contactInfo_item'>\n                    <span>Email: </span>{resumeData.email}\n                  </Typography>\n\n                </Grid>\n                <Grid item xs={12}>\n                  <Typography className='contactInfo_item'>\n                    <span>Phone: </span>{resumeData.phone}\n                  </Typography>\n\n                </Grid>\n                <Grid item xs={12}>\n                  <Typography className='contactInfo_item'>\n                    <span>GitHub: </span>{resumeData.github}\n                  </Typography>\n\n                </Grid>\n                <Grid item xs={12}>\n                  <Typography className='contactInfo_item'>\n                    <span>Twitter: </span>{resumeData.twitter}\n                  </Typography>\n\n                </Grid>\n\n                <Grid item xs={12}>\n                  <Typography className='contactInfo_item'>\n                    <span>LinkedIn: </span>{resumeData.linkedin}\n                  </Typography>\n\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item xs={12}>\n               <Grid container className='contactInfo_socialsContainer'>\n                    {Object.keys(resumeData.socials).map(key=>(\n                      <Grid item className='contactInfo_social'>\n                        <a href={resumeData.socials[key].link}>\n                          {resumeData.socials[key].icon}\n                        </a>\n                      </Grid>\n                    ))}\n               </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Resume;\n","import React from \"react\";\nimport { Container, Grid } from \"@material-ui/core\";\nimport \"./App.css\";\n\nimport Profile from \"./components/Profile/Profile\";\nimport Header from \"./components/Header/Header\";\nimport Footer from \"./components/Footer/Footer\";\nimport Portfolio from \"./pages/Portfolio/Portfolio\";\nimport Resume from \"./pages/Resume/Resume\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Container className={'top_60'}>\n      <Grid container spacing={7}>\n        <Grid item xs={12} sm={12} md={4} lg={3}>\n          <Profile />\n        </Grid>\n        <Grid item xs style={{backgroundColor:''}}>\n          <Router>\n            <Header />\n            <div className='main-container container_shadow'>\n              <Switch>\n              <Route path=\"/portfolio\">\n                <Portfolio />\n              </Route>\n              <Route path=\"/\">\n                <Resume />\n              </Route>\n            </Switch>\n            </div>\n          </Router>\n          <Footer />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}